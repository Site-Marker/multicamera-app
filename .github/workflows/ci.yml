name: React Native CI/CD

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test || echo "No tests specified"

  build-android:
    name: Build Android App
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Fix expo-file-system Gradle issue
        run: |
          sed -i 's/classifier = "sources"/archiveClassifier = "sources"/g' node_modules/expo-file-system/android/build.gradle || echo "File not found or already fixed"
          
      - name: Build Android App
        run: cd android && ./gradlew assembleRelease --no-daemon

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk

  build-ios:
    name: Build iOS App
    needs: lint-and-test
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Fix Expo package versions for iOS
        run: |
          echo "Ensuring compatible expo-file-system version..."
          npm install expo-file-system@~15.1.1 --save --legacy-peer-deps

      - name: Install Expo CLI
        run: npm install -g expo-cli

      - name: Install pods
        run: |
          cd ios
          pod install

      - name: Build iOS App
        run: |
          xcodebuild -workspace ios/multicameraapp.xcworkspace -scheme multicamera-app -configuration Release -sdk iphoneos -derivedDataPath ios/build
        env:
          DEVELOPER_DIR: /Applications/Xcode.app

      # Uncomment if you want to upload IPA
      # - name: Create IPA
      #   run: |
      #     mkdir Payload
      #     cp -r ios/build/Build/Products/Release-iphoneos/multicamera-app.app Payload
      #     zip -r app.ipa Payload
      #
      # - name: Upload IPA
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ios-app
      #     path: app.ipa 